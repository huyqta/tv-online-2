@model tv_online.Models.TbChannel;
@inject tv_online.Models.TvOnlineContext context;

@{
    var listChannels = context.TbChannel.Where(c => c.ShortCode == Model.ShortCode).ToList();
}
<div class="text-center">
    <h1 class="display-4">@Model.Channel</h1>
    @for (var i = 1; i <= listChannels.Count; i++)
    {
        var url = listChannels[i - 1].StreamUrl;
        <button value="@url" class="btn btn-warning btn-link-stream">Link @i</button>
    }

    <video class="player-style" id="player1"></video>
</div>
<script>
    $(function () {
        //selectLink();
        var defaultUrl = $('.btn-link-stream').first().val();
        selectLink(defaultUrl);

        $('.btn-link-stream').on('click', function () {
            $('#player1').html();

            selectLink($(this).val())
        })
    });

    function selectLink(url) {
        $('#player1').mediaelementplayer({
            //// if the <video width> is not specified, this is the default
            //defaultVideoWidth: 480,
            //// if the <video height> is not specified, this is the default
            //defaultVideoHeight: 270,
            //// if set, overrides <video width>
            //videoWidth: 480,
            //// if set, overrides <video height>
            //videoHeight: 270,
            stretching: 'responsive',
            // enables Flash and Silverlight to resize to content size
            enableAutosize: true,
            // force iPad's native controls
            iPadUseNativeControls: false,
            // force iPhone's native controls
            iPhoneUseNativeControls: false,
            // force Android's native controls
            AndroidUseNativeControls: false,
            // add desired features in order
            features: ['playpause', 'backlight', 'volume'],
            success: function (mediaElement, domObject) {
                var sources = [
                    { src: url, type: 'application/x-mpegURL' },
                ];
                mediaElement.setSrc(sources);
                mediaElement.load();
                mediaElement.play();
            }
        });
    };
</script>